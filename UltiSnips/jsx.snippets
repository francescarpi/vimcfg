snippet i18 "I18n" w
{this.context.t('${1}')}
endsnippet

snippet comp "Component" w
/*
 * Project: ${1}
 * Module: ${4}`!p snip.rv = path`
 * vim:ft=javascript.jsx:
 * @flow
 */
import React, {PropTypes} from 'react'

type Props = {}


class ${3} extends React.Component {

  props: Props

  render() {
    return (
      <div className="$3">
        $3
      </div>
	${5})
  }
}

export default $3
endsnippet

snippet sbu "Header comment" w
/*
 * Project: ${1}
 * Module: `!p snip.rv = path`
 * vim:ft=javascript.jsx:
 * @flow
 */

${3}
endsnippet

snippet cdu "Component did update" w
componentDidUpdate(prevProps: Props, prevState: Props) {
  ${1}
}
endsnippet

snippet cwrp "Component will receive props" w
componentWillReceiveProps(nextProps: Props) {
  ${1}
}
endsnippet

snippet cwu "Component will update" w
componentWillUpdate(nextProps: Props, nextState) {
  ${1}
}
endsnippet

snippet cdm "Component did mount" w
componentDidMount() {
  ${1}
}
endsnippet

snippet cwm "Component will mount" w
componentWillMount() {
  ${1}
}
endsnippet

snippet scu "Should component update" w
shouldComponentUpdate(nextProps: Props, nextState) {
  ${1}
}
endsnippet

snippet cwun "Component will unmount" w
componentWillUnmount() {
  ${1}
}
endsnippet

snippet cc "Constructor" w
constructor(props: Props) {
  super(props)
  ${1}
}

endsnippet

# HTML

snippet div "div" w
<div className="${1}">
  ${2}
</div>
endsnippet

snippet h1 "h1" w
<h1>${1}</h1>
endsnippet

snippet h2 "h2" w
<h2>${2}</h2>
endsnippet

snippet ifa "Italic font awesome" w
<i className="fa ${1}"/>
endsnippet

snippet span "span" w
<span>${1}</span>
endsnippet

snippet small "small" w
<small>${1}</small>
endsnippet

snippet b "b" w
<b>${1}</b>
endsnippet
